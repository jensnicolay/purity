#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 27 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 5 #"Hack\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 119 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 136 17 17 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 34 119 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 147 32 146 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 121 121 121 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 119 34 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 119 34 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 1 24 146 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 147 81 0 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 38 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 145 146 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 1 24 146 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 136 17 17 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 136 17 17 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 136 17 17 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 148 32 146 0 0 0 -1 -1 2
47 #"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 24
1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 14
1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 4594 0 24 3 1 #"("
0 0 14 3 11 #"random-seed"
0 0 24 3 1 #" "
0 0 21 3 3 #"111"
0 0 24 3 2 #") "
0 0 17 3 22 #"; deterministic random"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"CESK-TIMELIMIT"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-parameter"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 17 3 20 #"; timeout in minutes"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"%random"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-member"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"i"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";(define frameis (make-vector 1000))"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";(define (frame->framei frame) (index frameis frame))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctxis"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ctx->ctxi"
0 0 24 3 1 #" "
0 0 14 3 3 #"ctx"
0 0 24 3 3 #") ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctxis"
0 0 24 3 1 #" "
0 0 14 3 3 #"ctx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";(define stateis (make-vector 1000))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";(define (state->statei q) (index stateis q))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";(define storeis (make-vector 1000))"
0 0 24 29 1 #"\n"
0 0 17 3 47
#";(define (store->storei \317\203) (index storeis \317\203))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; domain helpers"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"env-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"list->set"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hash-values"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"store-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"store-\342\212\222"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2031"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\222"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2031"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash-count"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2031"
0 0 24 3 3 #") ("
0 0 14 3 10 #"hash-count"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 7 #"for/and"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 3 #"\317\2031"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 3 #"\342\212\222"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"stack-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\204"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\204"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; machine"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 10 #"#:property"
0 0 24 3 1 #" "
0 0 14 3 17 #"prop:custom-write"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"w?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"fprintf"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 19 3 35
#"\"EV ~a\\n\317\201 ~a\\n\317\203 ~a\\n\316\271 ~a\\n\316\272 ~a\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"ev-e"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ev-\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ev-\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ev-\316\271"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ev-\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"ko"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 10 #"#:property"
0 0 24 3 1 #" "
0 0 14 3 17 #"prop:custom-write"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"w?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"fprintf"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"KO \316\271 ~a\\n\316\272 ~a\\nv ~a\\n\317\203 ~a\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"ko-\316\271"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ko-\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 4 #"ko-v"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ko-\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"letk"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"letreck"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"haltk"
0 0 24 3 4 #" () "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"clo"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 10 #"#:property"
0 0 24 3 1 #" "
0 0 14 3 17 #"prop:custom-write"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"w?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"fprintf"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"<clo ~a>\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"\302\253lam\302\273-l"
0 0 24 3 2 #" ("
0 0 14 3 6 #"clo-\316\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"prim"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 2 #") "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 14 #"gen:equal+hash"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"equal-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #" "
0 0 14 3 7 #"requal?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"prim-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"prim-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"hash-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"rhash"
0 0 24 3 3 #") ("
0 0 14 3 15 #"equal-hash-code"
0 0 24 3 2 #" ("
0 0 14 3 9 #"prim-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"hash2-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"rhash"
0 0 24 3 3 #") ("
0 0 14 3 25 #"equal-secondary-hash-code"
0 0 24 3 2 #" ("
0 0 14 3 9 #"prim-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"prim2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 2 #") "
0 0 23 3 9 #"#:methods"
0 0 24 3 1 #" "
0 0 14 3 14 #"gen:equal+hash"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"equal-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #" "
0 0 14 3 7 #"requal?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"prim2-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"prim2-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"hash-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"rhash"
0 0 24 3 3 #") ("
0 0 14 3 15 #"equal-hash-code"
0 0 24 3 2 #" ("
0 0 14 3 10 #"prim2-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"hash2-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"rhash"
0 0 24 3 3 #") ("
0 0 14 3 25 #"equal-secondary-hash-code"
0 0 24 3 2 #" ("
0 0 14 3 10 #"prim2-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"system"
0 0 24 3 2 #" ("
0 0 14 3 6 #"states"
0 0 24 3 1 #" "
0 0 14 3 8 #"duration"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 1 #" "
0 0 14 3 7 #"answer?"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 10 #"#:property"
0 0 24 3 1 #" "
0 0 14 3 17 #"prop:custom-write"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 2 #"w?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"fprintf"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"<sys #~a ~a ~a>\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 2 #" ("
0 0 14 3 13 #"system-states"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"system-exit"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 2 #"~a"
0 0 24 3 2 #" ("
0 0 14 3 10 #"system-msg"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 23 3 11 #"#:max-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 2 #" ("
0 0 14 3 6 #"kalloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"wv"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"rv"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"wp"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"rp"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"fr"
0 0 24 3 4 #" () "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set?"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 2 #"as"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 6 #"))) (("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 3 #"clo"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 3 #") ("
0 0 14 3 13 #"env-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 4 #"letk"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 3 #") ("
0 0 14 3 13 #"env-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 7 #"letreck"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 3 #") ("
0 0 14 3 13 #"env-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reachable"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\263"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #") ("
0 0 14 3 1 #"R"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 1 #"R"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-first"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #") "
0 0 14 3 1 #"R"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\263"
0 0 24 3 2 #" ("
0 0 14 3 12 #"store-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #") "
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"gc"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\263"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 3 #"\317\201*"
0 0 24 3 2 #" ("
0 0 14 3 3 #"\342\206\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 4 #"free"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"R"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reachable"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 13 #"env-addresses"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 3 #") ("
0 0 14 3 15 #"stack-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 3 #")) "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\263"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 3 #"\342\206\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"R"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reachable"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 15 #"stack-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 3 #")) "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\263"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 3 #"\342\206\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"stack-frames"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 4 #"todo"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"seen"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 9 #"match-let"
0 0 24 3 4 #" ((("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set-first"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 7 #"result*"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list->set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #") ("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 4 #"seen"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #") "
0 0 14 3 7 #"result*"
0 0 24 3 1 #" "
0 0 14 3 4 #"seen"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"\316\271\316\272s"
0 0 24 3 2 #" ("
0 0 14 3 12 #"stack-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #") "
0 0 14 3 5 #"\316\271\316\272s"
0 0 24 3 2 #") "
0 0 14 3 7 #"result*"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 4 #"seen"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"set"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"\316\271\316\272s"
0 0 24 3 2 #" ("
0 0 14 3 12 #"stack-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"\316\271\316\272s"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"\316\271\316\272"
0 0 24 3 3 #") ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"\316\271\316\272"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"\316\271\316\272"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\236"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"stack-contexts"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 4 #"todo"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"seen"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"seen"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-first"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #") ("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 4 #"seen"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #") "
0 0 14 3 4 #"seen"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 3 #") ("
0 0 14 3 12 #"stack-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 4 #"seen"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"stack-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ctx-A"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 7 #")))) (("
0 0 14 3 2 #"\317\206"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 7 #"touches"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-machine"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 1 #" "
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 1 #" "
0 0 14 3 12 #"store-update"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lattice-\316\261"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\263"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lattice-\316\263"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\245"
0 0 24 3 2 #" ("
0 0 14 3 11 #"lattice-\342\212\245"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\224"
0 0 24 3 2 #" ("
0 0 14 3 11 #"lattice-\342\212\224"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"true?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lattice-true?"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"false?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lattice-false?"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"\316\261-eq?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"lattice-eq?"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"K"
0 0 24 3 2 #" ("
0 0 14 3 14 #"context-kalloc"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 2 #" ("
0 0 14 3 9 #"context-A"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-e"
0 0 24 3 2 #" ("
0 0 14 3 9 #"context-e"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"explore"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"poppers"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"include"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"primitives.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inject"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"global*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lattice-global"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 19 3 5 #"\"eq?\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"eq?\""
0 0 24 3 1 #" "
0 0 14 3 8 #"prim-eq?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 4 #"\"~a\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 24 3 1 #" "
0 0 14 3 14 #"prim-to-string"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 7 #"\"error\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"error\""
0 0 24 3 1 #" "
0 0 14 3 10 #"prim-error"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 7 #"\"pair?\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"pair?\""
0 0 24 3 1 #" "
0 0 14 3 9 #"prim-pair"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 6 #"\"cons\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cons\""
0 0 24 3 1 #" "
0 0 14 3 9 #"prim-cons"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 5 #"\"car\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"car\""
0 0 24 3 1 #" "
0 0 14 3 8 #"prim-car"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 10 #"\"set-car!\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"set-car!\""
0 0 24 3 1 #" "
0 0 14 3 13 #"prim-set-car!"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 5 #"\"cdr\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"cdr\""
0 0 24 3 1 #" "
0 0 14 3 8 #"prim-cdr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 19 3 10 #"\"set-cdr!\""
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"set-cdr!\""
0 0 24 3 1 #" "
0 0 14 3 13 #"prim-set-cdr!"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"compiled-e"
0 0 24 3 2 #" ("
0 0 14 3 7 #"compile"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 18 #"conc-alloc-counter"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 6 #"global"
0 0 24 3 1 #" "
0 0 14 3 7 #"global*"
0 0 24 3 3 #") ("
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 6 #"global"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"gc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 10 #"compiled-e"
0 0 24 3 2 #" ("
0 0 14 3 3 #"\342\206\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 4 #"free"
0 0 24 3 1 #" "
0 0 14 3 10 #"compiled-e"
0 0 24 3 3 #")) "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 5 #"haltk"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 3 #") ("
0 0 14 3 4 #"hash"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\263"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 10 #"conc-alloc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 32 #";(define (stack-to-string stack)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 66
#";  (cons (map frame->framei (car stack)) (ctx->ctxi (cdr stack))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"env-bind"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"store-alloc"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"current"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\245"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"\342\212\224"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"stack-alloc!"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 76
(
 #";(printf \"allocing ctx ~a stack ~a \" (ctx->ctxi \317\204) (stack-t"
 #"o-string stack))"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"stacks"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"stacks"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 6 #"stacks"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 59
#";(printf \"ADDING to ~a\\n\" (set-map stacks stack-to-string))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 6 #"stacks"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (("
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"poppers"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"set-remove!"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"alloc-literal"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 9 #"match-let"
0 0 24 3 4 #" ((("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"car-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"car-\317\203"
0 0 24 3 3 #") ("
0 0 14 3 13 #"alloc-literal"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 9 #"match-let"
0 0 24 3 4 #" ((("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"cdr-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"cdr-\317\203"
0 0 24 3 3 #") ("
0 0 14 3 13 #"alloc-literal"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 6 #"car-\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"store-alloc"
0 0 24 3 1 #" "
0 0 14 3 6 #"cdr-\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\261"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"car-v"
0 0 24 3 1 #" "
0 0 14 3 5 #"cdr-v"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\261"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 7 #"\302\253lit\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\261"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"\302\253id\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 12 #"store-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 2 #"rv"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 7 #"\302\253lam\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"cl"
0 0 24 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\261"
0 0 24 3 1 #" "
0 0 14 3 2 #"cl"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 7 #"\302\253quo\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 4 #"atom"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\261"
0 0 24 3 1 #" "
0 0 14 3 4 #"atom"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"cannot handle ae\""
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"apply-let-kont"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ctx-e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"\317\201*"
0 0 24 3 2 #" ("
0 0 14 3 8 #"env-bind"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 8 #"\302\253id\302\273-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 11 #"store-alloc"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"apply-letrec-kont"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 8 #"\302\253id\302\273-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"store-update"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"apply-local-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"letk"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"apply-let-kont"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"letreck"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"apply-letrec-kont"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 24 #";(define (print-state q)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 11 #";  (match q"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 211
(
 #";   ((ev e \317\201 \317\203 \316\271 \316\272 m)"
 #" (printf \"EV ~a\\n\317\201 ~a \317\203"
 #" ~a\\n\316\271 ~a \316\272 ~a frames ~a"
 #"\\n\" (~a e #:max-width 40) \317\201 (store->storei \317\203) (map f"
 #"rame->framei \316\271) (ctx->ctxi "
 #"\316\272) (set-map (stack-frame"
 #"s \316\271 \316\272 \316\236) frame->framei)))"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 181
(
 #";    ((ko \316\271 \316\272 v \317\203 m) ("
 #"printf \"KO ~a \317\203 ~a\\n\316\271 ~"
 #"a \316\272 ~a frames ~a\\n\" v (store->storei \317\203) (map frame->"
 #"framei \316\271) (ctx->ctxi \316\272)"
 #" (set-map (stack-frames \316\271 \316\272 \316\236) frame->framei)))"
 #"))"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 20 #";(check-safety q \316\236)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ae?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 6 #"\302\253if\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"true?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ae?"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 2 #"v*"
0 0 24 3 1 #" "
0 0 14 3 2 #"E*"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"v*"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 2 #"E*"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ae?"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 2 #"v*"
0 0 24 3 1 #" "
0 0 14 3 2 #"E*"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"v*"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 2 #"E*"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 3 #"set"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\302\253let\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ae?"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 10 #"let-values"
0 0 24 3 5 #"  ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"apply-let-kont"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"letk"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\271"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 10 #"\302\253letrec\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ctx-e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"\317\201*"
0 0 24 3 2 #" ("
0 0 14 3 8 #"env-bind"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 8 #"\302\253id\302\273-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 11 #"store-alloc"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\245"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ae?"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 17 #"apply-letrec-kont"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"letreck"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\271"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\272"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 8 #"\302\253set!\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #" ("
0 0 14 3 8 #"\302\253id\302\273-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"\317\203*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"store-update"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 3 #") ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #" ("
0 0 14 3 2 #"wv"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\302\253quo\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 9 #"match-let"
0 0 24 3 4 #" ((("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #") ("
0 0 14 3 13 #"alloc-literal"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ev"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\302\253app\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 10 #"rands-loop"
0 0 24 3 3 #" (("
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rvs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()) ("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 4 #"succ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 6 #"))) (("
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\263"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     (("
0 0 14 3 3 #"clo"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\302\253lam\302\273"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 2 #") "
0 0 14 3 4 #"\317\201**"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 15 #"stack-addresses"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 3 #"\316\272*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"K"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"rvs"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-loop"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 12 #"stack-alloc!"
0 0 24 3 1 #" "
0 0 14 3 3 #"\316\272*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 4 #"succ"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ev"
0 0 24 3 1 #" "
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 3 #"\316\272*"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            (("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"xs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 3 #"set"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"bind-loop"
0 0 24 3 1 #" "
0 0 14 3 2 #"xs"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 3 #") ("
0 0 14 3 8 #"env-bind"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\201*"
0 0 24 3 2 #" ("
0 0 14 3 8 #"\302\253id\302\273-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 11 #"store-alloc"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\203*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"bind-loop"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 3 #"rvs"
0 0 24 3 2 #") "
0 0 14 3 4 #"\317\201**"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     (("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 4 #"succ"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list->set"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-map"
0 0 24 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 3 #"rvs"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"v\317\203E"
0 0 24 3 3 #") ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"v\317\203E"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"v\317\203E"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 4 #"v\317\203E"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     (("
0 0 14 3 5 #"prim2"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 4 #"succ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 2 #" ("
0 0 14 3 10 #"transition"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 4 #"proc"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 3 #"rvs"
0 0 24 3 3 #")) "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ((("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"E*"
0 0 24 3 3 #") ("
0 0 14 3 9 #"eval-atom"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 10 #"rands-loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"rvs"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 14 3 2 #"E*"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ko"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"haltk"
0 0 24 3 2 #") "
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 2 #"ko"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\245"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"set"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 6 #"\316\271\316\272Gs"
0 0 24 3 2 #" ("
0 0 14 3 9 #"stack-pop"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 6 #"\316\271\316\272Gs"
0 0 24 3 1 #" "
0 0 14 3 6 #"\316\271\316\272Gs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"succ"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"\316\271\316\272Gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"succ"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 5 #"\316\271\316\272G"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-first"
0 0 24 3 1 #" "
0 0 14 3 6 #"\316\271\316\272Gs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"\316\271"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"\316\271\316\272G"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 5 #"\316\271\316\272G"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"G"
0 0 24 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 24 3 1 #" "
0 0 14 3 5 #"\316\271\316\272G"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 5 #"succ*"
0 0 24 3 2 #" ("
0 0 14 3 16 #"apply-local-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\271"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (("
0 0 14 3 2 #"\316\272"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"poppers"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"poppers"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\272"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")) "
0 0 14 3 1 #"q"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 6 #"\316\271\316\272Gs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 4 #"succ"
0 0 24 3 1 #" "
0 0 14 3 5 #"succ*"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"        )) "
0 0 17 3 10 #"; end step"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mutable-set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mutable-set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inject"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-system"
0 0 24 3 1 #" "
0 0 14 3 8 #"duration"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"system"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->vector"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set->list"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 3 #")) "
0 0 14 3 8 #"duration"
0 0 24 3 1 #" "
0 0 14 3 7 #"initial"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 1 #" "
0 0 14 3 7 #"context"
0 0 24 3 1 #" "
0 0 14 3 7 #"answer?"
0 0 24 3 1 #" "
0 0 14 3 4 #"exit"
0 0 24 3 1 #" "
0 0 14 3 3 #"msg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 34 #";(define state-limit (STATELIMIT))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"time-limit"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 20 #"current-milliseconds"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 14 #"CESK-TIMELIMIT"
0 0 24 3 2 #") "
0 0 21 3 5 #"60000"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 20 #"current-milliseconds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 12 #"explore-loop"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-count"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 2 #") "
0 0 21 3 5 #"10000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 20 #"current-milliseconds"
0 0 24 3 2 #") "
0 0 14 3 10 #"time-limit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-system"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 20 #"current-milliseconds"
0 0 24 3 2 #") "
0 0 14 3 5 #"start"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 4 #"user"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"time out\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"make-system"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 20 #"current-milliseconds"
0 0 24 3 2 #") "
0 0 14 3 5 #"start"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ok"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 1 #"q"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-first"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 12 #"explore-loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 36 #";(printf \"q ~a\\n\" (state->statei q))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"set-add!"
0 0 24 3 1 #" "
0 0 14 3 7 #"visited"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"set-add!"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 9 #"succ-loop"
0 0 24 3 3 #" (("
0 0 14 3 5 #"succs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"new-states"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"succs-gc"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"succs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 8 #"existing"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"updated"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 8 #"existing"
0 0 24 3 1 #" "
0 0 14 3 8 #"succs-gc"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #" "
0 0 14 3 7 #"updated"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 32 #";(when (> (set-count updated) 3)"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 66
(
 #";  (printf \"~a has ~a succs\\n\" (state-repr q) (set-count updated)"
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 24 #";  (for ((succ updated))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 47 #";    (printf \"\\t~a\\n\" (state-repr (car succ))))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 2 #";)"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-union"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-states"
0 0 24 3 1 #" "
0 0 14 3 4 #"todo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 12 #"explore-loop"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-first"
0 0 24 3 1 #" "
0 0 14 3 5 #"succs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                (("
0 0 14 3 10 #"transition"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"s-gc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"gc"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\236"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\263"
0 0 24 3 1 #" "
0 0 14 3 5 #"ctx-A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"succ-loop"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"succs"
0 0 24 3 3 #") ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-states"
0 0 24 3 1 #" "
0 0 14 3 4 #"s-gc"
0 0 24 3 3 #") ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 8 #"succs-gc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"s-gc"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 15 #")))))))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ) "
0 0 17 3 15 #"; end explore  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"answer?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 2 #"ko"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"haltk"
0 0 24 3 2 #") "
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 14 3 7 #"explore"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"answer-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"answer?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"system-answer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 6 #"))) (("
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 13 #"system-states"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"answer?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"answer-value"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 7 #"lattice"
0 0 24 3 2 #" ("
0 0 14 3 14 #"system-lattice"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"\342\212\245"
0 0 24 3 2 #" ("
0 0 14 3 11 #"lattice-\342\212\245"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"\342\212\224"
0 0 24 3 2 #" ("
0 0 14 3 11 #"lattice-\342\212\224"
0 0 24 3 1 #" "
0 0 14 3 7 #"lattice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 8 #"for/fold"
0 0 24 3 3 #" (("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\212\245"
0 0 24 3 5 #")) (("
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 10 #"answer-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"sys"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"\342\212\224"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ko-v"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; allocators"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"conc-alloc-counter"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"conc-alloc"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 18 #"conc-alloc-counter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 18 #"conc-alloc-counter"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 18 #"conc-alloc-counter"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"mono-alloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"poly-alloc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"ctx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"ctx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";  (cons x (if ctx"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";              (clo-\316\273 (ctx-clo ctx))"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";              ctx)))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Store updates"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"weak-update"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 8 #"type-\342\212\224"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"strong-update"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
